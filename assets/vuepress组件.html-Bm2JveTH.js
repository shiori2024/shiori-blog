import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as t,o as i,c,b as n,d as s,e as a,w as r,a as u,f as p}from"./app-C1cYG3tD.js";const d={},m=n("h1",{id:"全局组件",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#全局组件"},[n("span",null,"全局组件")])],-1),v=n("p",null,[s("注册全局组件，当你的VuePress每个页面都需要自定义容器时使用，它会像"),n("code",null,"footer"),s(),n("code",null,"header"),s("那样全局布局。")],-1),k={class:"hint-container tip"},g=n("p",{class:"hint-container-title"},"提示",-1),h={href:"https://www.vuepress.cn/plugin/official/plugin-register-components.html#vuepress-plugin-register-components",target:"_blank",rel:"noopener noreferrer"},b=p(`<p>引入插件</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-D</span> @vuepress/plugin-register-components
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>配置config</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// .vuepress/config.js</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token comment">// ....</span>
    <span class="token punctuation">[</span>
      <span class="token string">&#39;@vuepress/register-components&#39;</span><span class="token punctuation">,</span><span class="token punctuation">{</span>
        <span class="token literal-property property">componentsDir</span><span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token string">&#39;DemoLayout&#39;</span><span class="token punctuation">,</span>
          <span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在<code>.vuepress</code>中创建<code>components</code>目录结构如下：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>.
└─ .vuepress
   └─ components
      ├─ DemoLayout.vue
      ├─ BoxLayout.vue
      ├─ OtherComponent.vue
      └─ demo-2.vue
         └─ demo-2-1.vue
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>随后可以直接在 markdown 文件中使用</p><div class="language-markdown line-numbers-mode" data-ext="md" data-title="md"><pre class="language-markdown"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DemoLayout</span><span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BoxLayout</span><span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>OtherComponent</span><span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>demo-2</span><span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>demo-2-1</span><span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="更多实例" tabindex="-1"><a class="header-anchor" href="#更多实例"><span>更多实例</span></a></h2><p>如果你想了解更多关于vuepress框架的注册组件运用，那么请看。</p>`,10),y={id:"实例1-相册页",tabindex:"-1"},_={class:"header-anchor",href:"#实例1-相册页"},f=n("p",null,[n("a",{href:""},"源码")],-1),x=n("h1",{id:"自定义页面",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#自定义页面"},[n("span",null,"自定义页面")])],-1),B={class:"hint-container tip"},E=n("p",{class:"hint-container-title"},"提示",-1),L={href:"https://v1.vuepress.vuejs.org/zh/theme/default-theme-config.html#%E7%89%B9%E5%AE%9A%E9%A1%B5%E9%9D%A2%E7%9A%84%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B8%83%E5%B1%80",target:"_blank",rel:"noopener noreferrer"},w=p(`<h2 id="自定义md页面" tabindex="-1"><a class="header-anchor" href="#自定义md页面"><span>自定义md页面</span></a></h2><p>如果你想要使用一个完全自定义的组件来代替当前的页面（而只保留导航栏），你可以再次使用 <code>YAML front matter</code> 来指定这个组件。</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token punctuation">---</span>
<span class="token key atrule">layout</span><span class="token punctuation">:</span> DemoLayout
<span class="token punctuation">---</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这将会为当前的页面渲染 <code>.vuepress/components/DemoLayout.vue</code> 布局。<br> 也就是说，我们需要在 <code>.vuepress/components/</code> 目录下创建 <code>vue组件</code>。</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>DemoLayout<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>你的名字是：{{user.name}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>你几岁了呀：{{user.age}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;DemoLayout&#39;</span><span class="token punctuation">,</span>
    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">user</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;阿乐&#39;</span><span class="token punctuation">,</span>
                <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token string">&#39;17&#39;</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们还可以在自定义页面中 自定义页面类。</p><h2 id="自定义页面类" tabindex="-1"><a class="header-anchor" href="#自定义页面类"><span>自定义页面类</span></a></h2><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token punctuation">---</span>
<span class="token comment"># layout: DemoLayout</span>
<span class="token key atrule">pageClass</span><span class="token punctuation">:</span> demo<span class="token punctuation">-</span>page<span class="token punctuation">-</span>class
<span class="token punctuation">---</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>只能在 <code>.vuepress/styles/index.styl</code> 中编写针对该页面的 CSS ：</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token comment">/* .vuepress/styles/index.styl */</span>

<span class="token selector">.theme-container.demo-page-class</span> <span class="token punctuation">{</span>
  <span class="token comment">/* 特定页面的 CSS */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10);function D(A,C){const e=t("ExternalLinkIcon"),o=t("RouteLink");return i(),c("div",null,[m,v,n("div",k,[g,n("p",null,[n("a",h,[s("原文"),a(e)])])]),b,n("h3",y,[n("a",_,[n("span",null,[a(o,{to:"/remember/"},{default:r(()=>[s("实例1：相册页")]),_:1})])])]),f,u(` <RecoDemo :collapse="true">
  <template slot="code-template">
    <<< @/.vuepress/components/BoxLayout.vue?template
  </template>
  <template slot="code-script">
    <<< @/.vuepress/components/BoxLayout.vue?script
  </template>
  <template slot="code-style">
    <<< @/.vuepress/components/BoxLayout.vue?style
  </template>
</RecoDemo> `),x,n("div",B,[E,n("p",null,[n("a",L,[s("原文"),a(e)])])]),w])}const j=l(d,[["render",D],["__file","vuepress组件.html.vue"]]),N=JSON.parse('{"path":"/posts/vuepress%E7%BB%84%E4%BB%B6.html","title":"vuepress组件","lang":"zh-CN","frontmatter":{"icon":"edit","title":"vuepress组件","date":"2023-03-08T18:32:22.000Z","category":["vuepress"],"tag":["组件","vue"],"description":"全局组件 注册全局组件，当你的VuePress每个页面都需要自定义容器时使用，它会像footer header那样全局布局。 提示 原文 引入插件 配置config 在.vuepress中创建components目录结构如下： 随后可以直接在 markdown 文件中使用 更多实例 如果你想了解更多关于vuepress框架的注册组件运用，那么请看。 源...","head":[["meta",{"property":"og:url","content":"https://shiori.fun/posts/vuepress%E7%BB%84%E4%BB%B6.html"}],["meta",{"property":"og:site_name","content":"花诽语"}],["meta",{"property":"og:title","content":"vuepress组件"}],["meta",{"property":"og:description","content":"全局组件 注册全局组件，当你的VuePress每个页面都需要自定义容器时使用，它会像footer header那样全局布局。 提示 原文 引入插件 配置config 在.vuepress中创建components目录结构如下： 随后可以直接在 markdown 文件中使用 更多实例 如果你想了解更多关于vuepress框架的注册组件运用，那么请看。 源..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-18T15:02:23.000Z"}],["meta",{"property":"article:author","content":"shiori"}],["meta",{"property":"article:tag","content":"组件"}],["meta",{"property":"article:tag","content":"vue"}],["meta",{"property":"article:published_time","content":"2023-03-08T18:32:22.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-18T15:02:23.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"vuepress组件\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-03-08T18:32:22.000Z\\",\\"dateModified\\":\\"2024-02-18T15:02:23.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"shiori\\",\\"url\\":\\"https://shiori.fun\\",\\"email\\":\\"shiori2024@163.com\\"}]}"]]},"headers":[{"level":2,"title":"更多实例","slug":"更多实例","link":"#更多实例","children":[{"level":3,"title":"实例1：相册页","slug":"实例1-相册页","link":"#实例1-相册页","children":[]}]},{"level":2,"title":"自定义md页面","slug":"自定义md页面","link":"#自定义md页面","children":[]},{"level":2,"title":"自定义页面类","slug":"自定义页面类","link":"#自定义页面类","children":[]}],"git":{"createdTime":1708268543000,"updatedTime":1708268543000,"contributors":[{"name":"shiori2024","email":"shiori2024@163.com","commits":1}]},"readingTime":{"minutes":1.45,"words":434},"filePathRelative":"posts/vuepress组件.md","localizedDate":"2023年3月8日","excerpt":"\\n<p>注册全局组件，当你的VuePress每个页面都需要自定义容器时使用，它会像<code>footer</code> <code>header</code>那样全局布局。</p>\\n<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">提示</p>\\n<p><a href=\\"https://www.vuepress.cn/plugin/official/plugin-register-components.html#vuepress-plugin-register-components\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">原文</a></p>\\n</div>","autoDesc":true}');export{j as comp,N as data};
